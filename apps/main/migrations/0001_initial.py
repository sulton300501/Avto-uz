# Generated by Django 5.1.6 on 2025-02-16 05:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('service', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BodyConditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'condition_name',
                'verbose_name_plural': 'condition_name',
            },
        ),
        migrations.CreateModel(
            name='BodyParts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_name', models.CharField(max_length=255, verbose_name='moshina tanasi')),
            ],
            options={
                'verbose_name': 'body_name',
                'verbose_name_plural': 'body_names',
            },
        ),
        migrations.CreateModel(
            name='BodyStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CarOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Moshina opsiyalari')),
            ],
            options={
                'verbose_name': 'name',
                'verbose_name_plural': 'names',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='CarOptionsMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.CharField(max_length=500)),
                ('is_main', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Prices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.BigIntegerField()),
                ('currency', models.CharField(max_length=50, verbose_name='Valyuta turi')),
                ('discount', models.FloatField(blank=True, null=True, verbose_name='chegirma %')),
            ],
            options={
                'verbose_name': 'Price',
                'verbose_name_plural': 'Prices',
                'ordering': ('price',),
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Kiritilgan sana')),
                ('updated_at', models.DateField(auto_now=True, verbose_name="o'zgartrilgan sana")),
                ('brand', models.CharField(max_length=255, verbose_name='Car Brand')),
                ('model', models.CharField(max_length=255, verbose_name='Car Model')),
                ('year', models.PositiveIntegerField(verbose_name='Year of Manufacture')),
                ('price', models.BigIntegerField(default=0, verbose_name='Car Price')),
                ('mileage', models.BigIntegerField(default=0, verbose_name='Mileage (km)')),
                ('color', models.CharField(max_length=50, verbose_name='Color')),
                ('engine_capacity', models.PositiveIntegerField(help_text='Enter in cc or liters', verbose_name='Engine Capacity (cc or L)')),
                ('gearbox_type', models.CharField(choices=[('Automatic', 'Automatic'), ('Manual', 'Manual')], max_length=10, verbose_name='Transmission')),
                ('fuel_type', models.CharField(choices=[('Petrol', 'Petrol'), ('Diesel', 'Diesel'), ('Electric', 'Electric'), ('Hybrid', 'Hybrid')], max_length=100, verbose_name='Fuel Type')),
                ('gas_type', models.CharField(blank=True, choices=[('Methane', 'Methane'), ('Propane', 'Propane'), ('Butane', 'Butane')], max_length=100, null=True, verbose_name='Gas Type')),
                ('description', models.TextField(verbose_name='Description')),
                ('generation', models.CharField(blank=True, max_length=255, null=True, verbose_name='Generation')),
                ('body_type', models.CharField(blank=True, choices=[('Sedan', 'Sedan'), ('Coupe', 'Coupe')], max_length=100, null=True, verbose_name='Body Type')),
                ('power', models.PositiveIntegerField(verbose_name='Horsepower')),
                ('passport_type', models.CharField(blank=True, choices=[('Local', 'Local'), ('Import', 'Import')], max_length=100, null=True, verbose_name='Passport Type')),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='Purchase Date')),
                ('ownership_type', models.CharField(blank=True, choices=[('Individual', 'Individual'), ('Company', 'Company'), ('Rental', 'Rental')], max_length=255, null=True, verbose_name='Ownership Type')),
                ('status', models.CharField(choices=[('Sold', 'Sold'), ('Unsold', 'Unsold')], max_length=100, verbose_name='Status')),
                ('is_daily_offer', models.BooleanField(default=False, verbose_name='Daily Offer')),
                ('favorite_count', models.PositiveIntegerField(default=0, verbose_name='Favorite Count')),
                ('dealer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dealer_services', to='service.servicedealer')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
